name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build

    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            dist: linux

          - os: macos-11
            dist: macos

          - os: windows-2019
            dist: windows

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: gui

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install -r requirements-dev.txt

    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=version::$(python -m pip freeze \
        | grep 123tv-iptv | awk -F '==' '{print $2}')
      shell: bash

    - name: Get the tag
      id: get_tag
      run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      shell: bash

    - name: Version check
      if: ${{ format('v{0}', steps.get_version.outputs.version) != steps.get_tag.outputs.tag }}
      uses: actions/github-script@v3
      with:
        script: |
            core.setFailed('tag and version are not equivalent!')

    - name: Build standalone app
      run: |
        python scripts/build.py

    - name: Archive Windows distributive
      if: matrix.dist == 'windows'
      run: pushd dist && 7z a ../123tv-iptv-${{ steps.get_version.outputs.version }}-${{ matrix.dist }}.zip  123tv-iptv.exe && popd
      shell: bash

    - name: Archive Linux/MacOS distributive
      if: matrix.dist != 'windows'
      run: tar -C dist/ -czvf 123tv-iptv-${{ steps.get_version.outputs.version }}-${{ matrix.dist }}.tar.gz 123tv-iptv
      shell: bash

    - name: Upload distributive
      uses: actions/upload-artifact@v3
      with:
        name: dist-${{ matrix.dist }}
        path: 123tv-iptv-*
        retention-days: 5

  release:
    name: Release

    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: gui

    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=version::$(python -m pip freeze \
        | grep 123tv-iptv | awk -F '==' '{print $2}')
      shell: bash

    - uses: actions/download-artifact@v3

    - uses: ncipollo/release-action@v1.10.0
      with:
        name: GUI v${{ steps.get_version.outputs.version }}
        draft: true
        artifacts: "dist-*/*"
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
